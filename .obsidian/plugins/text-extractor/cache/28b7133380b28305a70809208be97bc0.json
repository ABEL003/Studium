{"path":"1.Semester/Programmiersprachen-Hs Aalen/Projektmappe/Programmieren Projektmappe.pdf","text":"Niklas Straub 3003013, Maximilian Erkert 3003458, Selim berk Tan 3002898, Simon Feldmann 3005165 Gruppenaufgabe I – Projektmappe Teilaufgabe 1 1. Fehlende Funktionen: - Wenn nicht alle Anforderungen erfasst wurden, könnten wichtige Funktionen oder Features in der Anwendung fehlen. Dies könnte dazu führen, dass die App nicht den Bedürfnissen der Benutzer entspricht oder nicht so effektiv ist, wie es sein könnte. Benutzerfreundlichkeit: - Eine unzureichende Erfassung von Benutzeranforderungen kann zu einer geringeren Benutzerfreundlichkeit führen. Möglicherweise wurden wichtige Aspekte der Benutzererfahrung nicht berücksichtigt, was dazu führen kann, dass die App schwer verständlich oder unangenehm in der Nutzung ist. Performanzprobleme: - Anforderungen können auch die Leistung der Anwendung beeinflussen. Wenn wichtige technische Anforderungen nicht berücksichtigt werden, könnte dies zu Problemen mit der Skalierbarkeit, Geschwindigkeit oder Stabilität der App führen. Sicherheitslücken: - Eine unvollständige Erfassung von Anforderungen könnte Sicherheitslücken in der Anwendung hinterlassen. Es ist wichtig, Sicherheitsanforderungen von Anfang an zu berücksichtigen, um sicherzustellen, dass sensible Daten angemessen geschützt sind. Kosten und Zeitüberschreitungen: - Das Fehlen einer klaren Anforderungsdokumentation kann zu Änderungen im Entwicklungsprozess führen, was wiederum zu zusätzlichen Kosten und Zeitüberschreitungen führen kann. Ein klar definiertes Anforderungsdokument minimiert Änderungen im späteren Entwicklungsprozess. 2. Mangelndes Verständnis der Benutzerbedürfnisse: - Ohne eine angemessene Einbindung der potenziellen Benutzer oder Stakeholder könnte das Team ein unvollständiges oder sogar falsches Verständnis der tatsächlichen Bedürfnisse und Erwartungen der Benutzer haben. Dies kann zu einer nicht zielgerichteten Entwicklung führen, bei der wichtige Anforderungen übersehen werden. Schlechte Benutzerakzeptanz: - Wenn die beteiligten Personen, insbesondere potenzielle Benutzer, nicht aktiv in den Entwicklungsprozess einbezogen werden, besteht die Gefahr, dass das Endprodukt nicht gut auf ihre Bedürfnisse abgestimmt ist. Dies kann zu einer geringen Akzeptanz der Anwendung durch die Zielgruppe führen. Niklas Straub 3003013, Maximilian Erkert 3003458, Selim berk Tan 3002898, Simon Feldmann 3005165 Mangelnde Unterstützung und Akzeptanz von Stakeholdern: - Wenn die Interessen und Erwartungen der Stakeholder nicht berücksichtigt werden, kann dies zu fehlender Unterstützung und Akzeptanz seitens derjenigen führen, die maßgeblich an der Entwicklung beteiligt sein sollten. Dies kann die reibungslose Umsetzung und den Erfolg des Projekts beeinträchtigen. Fehlende Ressourcenallokation: - Ohne die aktive Einbindung relevanter Stakeholder kann es zu Problemen bei der Ressourcenallokation kommen. Dies betrifft sowohl finanzielle als auch personelle Ressourcen. Fehlende Abstimmung mit den Stakeholdern kann dazu führen, dass wichtige Ressourcen nicht rechtzeitig oder in ausreichendem Maße bereitgestellt werden. Missverständnisse und Kommunikationsprobleme: - Eine unzureichende Einbindung kann zu Missverständnissen und Kommunikationsproblemen innerhalb des Entwicklungsteams führen. Klarer Austausch mit allen Beteiligten ist wichtig, um sicherzustellen, dass alle auf dem gleichen Stand sind und dass Informationen korrekt interpretiert werden. Teilaufgabe 2 Beschreiben Sie eine fiktive Rolle, die Ihre Projektgruppe bei der Entwicklung Ihrer Software- Idee einnehmen wird. Formulieren Sie die Ziele, die Sie in dieser Rolle bei der Entwicklung Ihrer Software-Idee verfolgen. 1. KippenApp: Das Finden von Zigarettenautomaten, Feuerzeugen und das knüpfen neuer soziale Kontakte. Teilaufgabe 3 Erarbeiten Sie für die Software-Idee in ihrer Gruppe, auf welche Art und Weise die Qualitätsmerkmale nach ISO/IEC 9126 umgesetzt sein müssen. Pro Qualitätsmerkmal min. 3 Beispiele erarbeiten. Sollte es Merkmale geben, die aus gutem Grund keine Rolle für Ihr Software-Produkt spielen, erläutern Sie warum. 1. Funktionalität: - Angemessenheit: Feuerzeugsuchfunktion dient dazu andere Raucher mit Feuerzeug zu finden. - Sicherheit: Identitätsschutz und Einverständniserklärung zu Standortnutzung. - Richtigkeit: Korrekte Auflistung des Sortiments verschiedene Automaten. Niklas Straub 3003013, Maximilian Erkert 3003458, Selim berk Tan 3002898, Simon Feldmann 3005165 2. Zuverlässigkeit: - Wiederherstellbarkeit: Datenverlust und Ausfallzeit minimieren - Verfügbarkeit: kontinuierlichen Servicebetrieb als gutes Erlebnis für den Nutzer - Fehlerresistenz: weniger Abstürze und unerwartet verhalten 3. Benutzbarkeit: - Attraktivität: ist sehr hoch da nichts vergleichbares Vorhanden ist. - Erlernbarkeit: sehr intuitiv. - Bedienbarkeit: nicht sehr hohe Aufwand für Benutzer, da alles was man braucht in App drin steht. 4. Effizienz: - Zeitverhalten: sehr kurze Wartezeit und Verarbeitungszeit. - Verbrauchsverhalten: GPS und Internetfähiges Endgerät. - Ressourcennutzung: CPU und Speicher nicht unnötig belasten 5. Wartbarkeit: - Änderbarkeit: neuen Zigarettenautomaten zur Karte hinzufügen. - Stabilität: es ist unwahrscheinlich unerwartete Auswirkungen von Änderungen gibt, weil die Änderungen relativ klein sind und nur die neue Automaten betrifft. - Überprüfbarkeit: geringe Aufwand zur Prüfung neue Software, da man nur wenige Aspekte ( nur Automaten) überprüfen muss. 6. Übertragbarkeit: - Anpassbarkeit: Einfache Anpassbarkeit an Umgebungen da die Karte auf unterschiedliche Orte anwendbar ist. - Koexistenz: App soll fähig sein mit Google Maps zu arbeiten. - Installierbarkeit: geringe Aufwand zum installieren da es nur eine App ist. ( Standortberechtigung notwendig!).","libVersion":"0.3.1","langs":""}